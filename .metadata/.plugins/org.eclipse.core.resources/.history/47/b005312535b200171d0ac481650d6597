package com.stackroute.spring.Hackathon;


import static org.junit.Assert.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.boot.context.embedded.LocalServerPort;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.*;
import org.springframework.test.context.junit4.SpringRunner;

import com.stackroute.spring.Hackathon.Domain.UserModel;
@RunWith(SpringRunner.class)
@SpringBootTest(classes = Application.class, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class AppControllerTest {
    String user1;
    @LocalServerPort
    private int port;
    TestRestTemplate restTemplate = new TestRestTemplate();
    HttpHeaders headers = new HttpHeaders();
    UserModel user;
    @Before
    public void setUp() throws Exception {
         user = new UserModel("1","manish","manish.nehara@cgi.com");
    }
    private String createURLWithPort(String uri) {
        return "http://localhost:" + port + uri;
    }
    @After
    public void tearDown() throws Exception {
    }
    @Test
    public void testSaveUser() throws Exception {
        HttpEntity<UserModel> entity = new HttpEntity<UserModel>(user, headers);
        ResponseEntity<String> response = restTemplate.exchange(
                createURLWithPort("/add"),
                HttpMethod.POST, entity, String.class);
        assertNotNull(response);
        String actual = response.getBody();
        System.out.println(actual);
        assertEquals("User saved successfully",actual);
    }
    @Test
    public void testList() throws Exception {
        HttpEntity<String> entity = new HttpEntity<String>(null, headers);
        ResponseEntity<String> response = restTemplate.exchange(
                createURLWithPort("/list"),
                HttpMethod.GET, entity, String.class);
        assertNotNull(response);
    }
    @Test
    public void testGetUser() throws Exception {
    }
    @Test
    public void testUpdateUser() throws Exception {
    }
    @Test
    public void testDeleteUser() throws Exception {
          HttpEntity<UserModel> entity = new HttpEntity<UserModel>(user, headers);
          ResponseEntity<String> response = restTemplate.exchange(
                  createURLWithPort("/delete"),
                  HttpMethod.POST, entity, String.class);
          assertNotNull(response);
          String actual = response.getBody();
          System.out.println(actual);
          assertEquals("User Deleted",actual);
    }
}
